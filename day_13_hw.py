import turtle as t                  # 거북이 import
import random                       # 랜덤함수

t.shape("turtle")                   # 모양 거북이로

t.up()                              # 펜 들기
t.goto(-250,250)                    #(-250,250)으로 거북이 이동
t.down()                            # 펜 내리기

for x in range(1,5):                # 4번 반복
    t.fd(500)                       # 앞으로 500가기
    t.rt(90)                        # 오른쪽으로 머리 90도 꺽기
t.up()                              # 펜 들기
t.fd(250)                           # 앞으로 250가기 
t.rt(90)                            # 오른쪽으로 머리 90도 꺽기
t.fd(250)                           # 앞으로 250가기


ang=random.randint(1,360)           # 1에서부터 360까지의 정수중 랜덤으로 ang에 저장
t.seth(ang)                         # ang에 저장된 각도로 거북이 머리 돌림

t.down()                            # 펜 내리기
t.color("blue")                     # 펜 색깔 파란색 지정

def a(n):                           # a 함수 정의
    n=180-n                         # 입력된 수를 180에서 뺀 후 다시 n에 저장
    
def b(n):                           # b 함수 정의
    n=360-n                         # 입력된 수를 360에서 뺀 후 다시 n에 저장

while True:                         # 무한반복
    
    c=t.xcor()                      # 현재 거북이의 x좌표를 c에 저장
    d=t.ycor()                      # 현재 거북이의 y좌표를 d에 저장
    v=t.heading()                   # 현재 거북이의 각도를 v에 저장
    
    if c <= -250:                   # 만약 거북이의 x좌표가 -250보다 작다면
        t.seth(180-v)               # 거북이의 방향을 180에서 현재의 각도만큼 뺀 값으로 돌린다
        t.fd(2)                     # 앞으로 2가기
    
    if c >= 250:                    # 만약 거북이의 x좌표가 250보다 크다면
        t.seth(180-v)               # 거북이의 방향을 180에서 현재의 각도만큼 뺀 값으로 돌린다
        t.fd(2)                     # 앞으로 2가기
    
    if d <= -250:                   # 만약 거북이의 y좌표가 -250보다 작다면
        t.seth(360-v)               # 거북이의 방향을 360에서 현재의 각도만큼 뺀 값으로 돌린다
        t.fd(2)                     # 앞으로 2가기
        
    if d >= 250:                    # 만약 거북이의 y좌표가 250보다 크다면
        t.seth(360-v)               # 거북이의 방향을 360에서 현재의 각도만큼 뺀 값으로 돌린다
        t.fd(2)                     # 앞으로 2가기
    
    else:
        t.fd(2)                     # 모두 아니면 앞으로 2가기
    
